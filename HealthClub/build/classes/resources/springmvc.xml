<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- 子容器配置自动扫描的包,组件扫描 -->
	<context:component-scan base-package="com.fy">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
	</context:component-scan>
	
	
        
	<!-- ，配置视图解析器  逻辑视图通过handler方法解析为实际的物理视图，-->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	
	
	<!-- 配置静态资源文件，location属性指明资源文件存放的真是路径，mapping属性指明页面访问该资源文件的路径表达式 -->
	<mvc:resources location="/jquery-easyui-1.3.6/demo/" mapping="/easyui-style/demo/**"/>
	<mvc:resources location="/jquery-easyui-1.3.6/themes/" mapping="/easyui-style/themes/**"/>
	<mvc:resources location="/jquery-easyui-1.3.6/" mapping="/easyui-script/**"/>
	
	
	
	<!--  静态资源交给默认的Servlet-->
	<mvc:default-servlet-handler/>
	
	<!-- 使用 mvc:annotation-driven代替上边注解映射器和注解适配器配置
	mvc:annotation-driven默认加载很多的参数绑定方法，
	比如json转换解析器就默认加载了，如果使用mvc:annotation-driven不用配置上边的RequestMappingHandlerMapping和RequestMappingHandlerAdapter
	实际开发时使用mvc:annotation-driven
	 -->
	<mvc:annotation-driven></mvc:annotation-driven>
	
	<task:annotation-driven scheduler="myScheduler"/>
		<task:scheduler id="myScheduler" pool-size="5"/>
	<context:component-scan base-package="com.fy.common.task" />
</beans>
